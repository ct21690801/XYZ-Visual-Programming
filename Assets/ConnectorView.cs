// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Linq;
using System.Collections.Generic;
using UnityEngine.EventSystems;

public class ConnectorView:BaseView<ConnectorModel>
{

       
		public PortModel StartPort{ get; set; }
		public PortModel EndPort{ get; set; }
		public List<GameObject> TemporaryGeometry;
		
		public void init (Vector3 startpoint, Vector3 endpoint)
		{
				redraw (startpoint, endpoint);
                TemporaryGeometry.Select(x => x.transform.parent = this.gameObject.transform);
			
		}


        protected override void OnDestroy()
        {
            base.OnDestroy();
                if (TemporaryGeometry != null)
                {
                    TemporaryGeometry.ForEach(x => UnityEngine.GameObject.DestroyImmediate(x));
                }
                if (Model != null)
                {
                    Model.PStart.PropertyChanged -= HandlePortChanges;
                    Model.PEnd.PropertyChanged -= HandlePortChanges;
                }
            
        }

		
		public List<GameObject> redraw ()
		{
				return redraw (StartPort.gameObject.transform.position, EndPort.gameObject.transform.position);
				
		}
        public override void OnPointerUp(PointerEventData pointerdata)
        {
            
        }

        public override void OnPointerClick(PointerEventData pointerdata)
        {
          
        }


        public override void OnDrag(PointerEventData pointerdata)
        {
            
        }

		public List<GameObject> redraw (Vector3 startPoint, Vector3 endpoint)
		{
				if (TemporaryGeometry != null) {
						TemporaryGeometry.ForEach (x => UnityEngine.GameObject.DestroyImmediate (x));
				}

				var range = Enumerable.Range (0, 100).Select (i => i / 100F).ToList ();
				var points = range.Select (x => Vector3.Slerp (startPoint, endpoint, x)).ToList ();
		
		
				var spheres = points.Select (x => {
						var y = GameObject.CreatePrimitive (PrimitiveType.Sphere);
						GameObject.DestroyImmediate (y.collider);
						y.transform.position = x;
						y.transform.localScale = new Vector3 (.2f, .2f, .2f);
						return y;}).ToList ();
		
				TemporaryGeometry = spheres;
				return spheres;
		}


		public void HandlePortChanges (object sender, EventArgs args)
		{
				Debug.Log (sender + " just sent event that port was modified and we should update the connector view");
				redraw (StartPort.gameObject.transform.position, EndPort.gameObject.transform.position);
		}


}